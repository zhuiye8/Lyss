version: '3.8'

services:
  # 后端服务
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: agent-platform-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=agent_platform
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - ./server:/app
    depends_on:
      - postgres
      - redis
      - milvus
      - minio
    networks:
      - agent-platform-network

  # 前端服务
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: agent-platform-web
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./web:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - agent-platform-network

  # PostgreSQL数据库
  postgres:
    image: postgres:14-alpine
    container_name: agent-platform-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=agent_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - agent-platform-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: agent-platform-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - agent-platform-network

  # Milvus向量数据库
  milvus:
    image: milvusdb/milvus:v2.3.2
    container_name: agent-platform-milvus
    restart: unless-stopped
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    ports:
      - "19530:19530"
      - "9091:9091"
    networks:
      - agent-platform-network
    depends_on:
      - etcd
      - minio

  # Etcd for Milvus
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: agent-platform-etcd
    restart: unless-stopped
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd-data:/etcd
    command: etcd --advertise-client-urls=http://127.0.0.1:2379 --listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - agent-platform-network

  # MinIO对象存储
  minio:
    image: minio/minio:RELEASE.2023-09-30T07-05-13Z
    container_name: agent-platform-minio
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - agent-platform-network

volumes:
  postgres-data:
  redis-data:
  etcd-data:
  minio-data:

networks:
  agent-platform-network:
    driver: bridge 